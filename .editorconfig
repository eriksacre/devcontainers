# EditorConfig is awesome: https://EditorConfig.org

# top-most EditorConfig file
root = true

# Unix-style newlines with a newline ending every file
[*]
charset = utf-8
end_of_line = lf
insert_final_newline = true
indent_style = space
indent_size = 4
tab_width = 4
trim_trailing_whitespace = true

# Markdown files
[*.md]
indent_style = space
indent_size = 2
tab_width = 2
trim_trailing_whitespace = false

# Shell scripts
[*.{sh,bash}]
indent_style = space
indent_size = 2
tab_width = 2

# JSON files
[*.json]
indent_style = space
indent_size = 2
tab_width = 2

# C-sharp files
[*.{cs,razor,cshtml}]
indent_style = space
indent_size = 4
tab_width = 4

# Newlines/Braces
csharp_new_line_before_open_brace = all
csharp_new_line_between_query_expression_clauses = true

# File-scoped namespaces (C# 10+)
csharp_style_namespace_declarations = file_scoped:suggestion

# Usings placement: outside namespace (Microsoft guideline)
csharp_using_directive_placement = outside_namespace:suggestion

# 'var' usage: when apparent; otherwise explicit
csharp_style_var_for_built_in_types = true:suggestion
csharp_style_var_when_type_is_apparent = true:suggestion
csharp_style_var_elsewhere = false:suggestion

# Language keywords vs BCL types (int, string, etc.)
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion
dotnet_style_predefined_type_for_member_access = true:suggestion

# this./Me. qualification (prefer none)
dotnet_style_qualification_for_field = false:suggestion
dotnet_style_qualification_for_property = false:suggestion
dotnet_style_qualification_for_method = false:suggestion
dotnet_style_qualification_for_event = false:suggestion

# Expression-bodied members (only when trivial)
csharp_style_expression_bodied_methods = when_on_single_line:suggestion
csharp_style_expression_bodied_properties = when_on_single_line:suggestion
csharp_style_expression_bodied_ctors = when_on_single_line:suggestion
csharp_style_expression_bodied_accessors = when_on_single_line:suggestion

# Pattern matching / modern syntax
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_pattern_local_over_anonymous_function = true:suggestion
csharp_style_prefer_switch_expression = true:suggestion
csharp_style_prefer_tuple_swap = true:suggestion
csharp_style_prefer_collection_expression = true:suggestion     # C# 12
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion

# Null checks and nullability
csharp_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:suggestion

# Object/collection initializers
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion
dotnet_style_prefer_auto_properties = true:suggestion

# Using directives
dotnet_sort_system_directives_first = true
dotnet_separate_import_directive_groups = true

# Parameter, 'var', discards, etc.
csharp_style_unused_value_expression_statement_preference = discard_variable:suggestion
csharp_style_unused_value_assignment_preference = discard_variable:suggestion

###############################################################################
# Naming rules (common Microsoft conventions)
###############################################################################
# Styles
dotnet_naming_style.pascalcase.capitalization = pascal_case
dotnet_naming_style.camelcase.capitalization = camel_case
dotnet_naming_style._leading_underscore.capitalization = camel_case
dotnet_naming_style._leading_underscore.required_prefix = _

# Symbols
dotnet_naming_symbols.interfaces.applicable_kinds = interface
dotnet_naming_symbols.interfaces.applicable_accessibilities = *
dotnet_naming_symbols.interfaces.required_modifiers = *

dotnet_naming_symbols.private_fields.applicable_kinds = field
dotnet_naming_symbols.private_fields.applicable_accessibilities = private
dotnet_naming_symbols.private_fields.required_modifiers = *

dotnet_naming_symbols.constants.applicable_kinds = field
dotnet_naming_symbols.constants.applicable_accessibilities = *
dotnet_naming_symbols.constants.required_modifiers = const

dotnet_naming_symbols.types_and_namespaces.applicable_kinds = class,struct,enum,delegate,namespace
dotnet_naming_symbols.types_and_namespaces.applicable_accessibilities = *

# Rules
dotnet_naming_rule.interfaces_must_start_with_i.symbols = interfaces
dotnet_naming_rule.interfaces_must_start_with_i.style = pascalcase
dotnet_naming_rule.interfaces_must_start_with_i.capitalization = pascal_case
dotnet_naming_rule.interfaces_must_start_with_i.required_prefix = I
dotnet_naming_rule.interfaces_must_start_with_i.severity = warning

dotnet_naming_rule.private_fields_should_have_underscore.symbols = private_fields
dotnet_naming_rule.private_fields_should_have_underscore.style = _leading_underscore
dotnet_naming_rule.private_fields_should_have_underscore.severity = warning

dotnet_naming_rule.constants_are_pascalcase.symbols = constants
dotnet_naming_rule.constants_are_pascalcase.style = pascalcase
dotnet_naming_rule.constants_are_pascalcase.severity = warning

dotnet_naming_rule.types_and_namespaces_are_pascalcase.symbols = types_and_namespaces
dotnet_naming_rule.types_and_namespaces_are_pascalcase.style = pascalcase
dotnet_naming_rule.types_and_namespaces_are_pascalcase.severity = warning

###############################################################################
# Analyzer enforcement (built-in .NET analyzers)
###############################################################################
# Turn on .NET analyzers and make important categories fail the build
dotnet_analyzer_diagnostic.category-Style.severity = warning
dotnet_analyzer_diagnostic.category-Design.severity = warning
dotnet_analyzer_diagnostic.category-Documentation.severity = warning
dotnet_analyzer_diagnostic.category-Performance.severity = warning
dotnet_analyzer_diagnostic.category-Reliability.severity = warning
dotnet_analyzer_diagnostic.category-Security.severity = warning

# Escalate a few high-value rules to errors (tune to taste)
dotnet_diagnostic.CA1062.severity = error    # Validate public method parameters for null
dotnet_diagnostic.CA1822.severity = error    # Mark members as static
dotnet_diagnostic.CA1827.severity = error    # Count() can be simplified
dotnet_diagnostic.IDE0060.severity = error   # Remove unused parameter
dotnet_diagnostic.IDE0051.severity = error   # Remove unused private members
dotnet_diagnostic.IDE0044.severity = error   # Make field readonly

# Treat suggestions as warnings at minimum
severity = warning

# JavaScript and TypeScript files
[*.{js,ts,jsx,tsx}]
indent_style = space
indent_size = 2
tab_width = 2

# YAML files
[*.{yml,yaml}]
indent_style = space
indent_size = 2
tab_width = 2

# Package files
[{package.json,package-lock.json}]
indent_style = space
indent_size = 2
tab_width = 2
